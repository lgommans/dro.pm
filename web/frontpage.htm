<!--
function dropm { result=$(curl -sS --user-agent cli --form "f=@$1" "https://dro.pm/fileman.php?secret=$2"); if [ "$result" == "1" ]; then echo Done; return; fi; echo "$result"; }
You can easily import this using: """source <(curl https://dro.pm | head -2 | tail -1)""" (without quotes). See https://pastebin.com/HUK0beKa for more information.
-->
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>dro.pm - Extremely Short Links</title>
	</head>
	<body>
		<div id="topbar">
			<span id="dropem">dro.p <span style="color:#bbb">'e</span>m</span>
			<div class="subtitle">Extremely short links</div>
		</div>
		<center>
			<div id="tabs">
				<div class="tab" id="tabBtn1" onclick="tab(1);">
					Short link
				</div>
				<div class="tab unselected" id="tabBtn2" onclick="tab(2);">
					Custom link
				</div>
			</div>
			<span id="sendToDevice" style="display: none; margin-bottom: 20px; font-size: 14pt;">
				<br><br><br>
				<span style="font-weight: bold; font-size: 30pt;">1. Choose your link</span><br>
				<input maxlength=250 id=customLink> <span id=customLinkValidation></span>
				<br><br>
				<label><input type=checkbox id=expireAfterFirstDownload> Delete contents immediately after opening</label>
				<br><br>
			</span>
			<div id="action" style="font-size: 30pt; font-weight: bold;">Loading...</div>
			<div id="url" style="display:none"></div>
			<div id="error" style="display:none"></div>
			<div>
				<textarea id="toshorten" wrap="off" style="width:350px;height:18px;padding-top:1px;overflow:auto;"></textarea>
				<noscript>
					<input type="submit" value="Shorten!"><br>
					<br>
					<span style="color:red">
						Note: Javascript is off. This website will not work currently.<br>
						There has been no demand for a no-Javascript version yet, let me know if you require one!
					</span>
				</noscript>
			</div>
			<br>
			<form method="POST" enctype="multipart/form-data" action="nojs.php" id="fileform">
				Or upload a file: <input type="file" name="f" id="f">
				<div style="display:none">
					<input type="submit">
					<iframe id="fileframe" name="fileframe"></iframe>
				</div>
			</form>
		</center>
		<div id="previewCanvasWrapper" hidden="true">
			<br>
			Image preview:<br>
			<canvas style="border:1px solid grey;" id="previewCanvas"></canvas>
		</div>
		<center>
			<div style="margin-top: 40px; color: #fff;" id=info>
				<a href="javascript:info()">More info</a> |
				<a href="https://github.com/lgommans/dro.pm/issues">Report a Bug</a>
			</div>
		</center>
		<script>
// TODO: reAllocate shortcode if t>60s
			var msg_loadingLink = "Loading your link...";
			var pasteimg_sizeratio = 0.6;
			var defaultActionText = ["Press Ctrl + V<span style='font-size: 15pt;position:relative;top:-25px;'><br>to paste your link or text</span>",
				"2. Share text, a link or a file"];

			function $(id){ return document.getElementById(id); }
			$("action").innerHTML = defaultActionText[0];

			$("toshorten").focus();
			$("toshorten").select();
			var url = 'Loading...';
			var urlShown = false;
			var currentTab = 1;
			var customUrl = false;
			var secret = false;
			var uploadedToSecrets = [];
			var uploadedFile = false; // whether we uploaded a file or text/url
			var toshortenprevval = null;
			var queuedUpload = function(){};

			var imgLoading = "<img src='res/img/loading-dark.gif' height='25'/> ";

			var secretsDB = {"shorturl": {}, "customurls": {}};

			$("dropem").style.cursor = "pointer";
			$("dropem").onclick = function() {
				tab(1);
			};

			function shouldIncreaseToShortenHeight() {
				return $("toshorten").clientWidth < $("toshorten").scrollWidth;
			}

			if ($("toshorten").value != "") {
				if (shouldIncreaseToShortenHeight()) {
					$("toshorten").style.height = "36px";
				}
			}

			var prevval = "";
			var hasPasted = false;
			$("toshorten").value = "";

			$("toshorten").onkeyup =
			$("toshorten").onmouseup =
			$("toshorten").onchange = function() {
				var height = 18;
				if (shouldIncreaseToShortenHeight()) {
					height += 18;
				}

				// Did we paste multiline text?
				if ($("toshorten").value.indexOf("\n") > -1) {
					height += $("toshorten").value.match(/\n/g).length * 18 + 2;
					height = Math.max(28, Math.min(350, height));
					$("toshorten").style.width = "600px";
				}

				$("toshorten").style.height = height + "px";
				// Does the value suddenly increase a lot in length?
				if ($("toshorten").value.length > prevval.length + 10) {
					hasPasted = true;
				}
				else {
					if ($("toshorten").value.length > 6 && !hasPasted) {
						showUrl();
						hasPasted = true;
					}
				}
				if (prevval != $("toshorten").value) {
					uploadText();

					// We were showing a pasted image, but we are overriding the link; let's remove that preview as well.
					if (!$("previewCanvasWrapper").hidden) {
						$("previewCanvasWrapper").hidden = true;
					}
				}
				prevval = $("toshorten").value;
			};

			$("f").onchange = function() {
				if (!secret) {
					if (currentTab == 2) {
						// They didn't select a link yet?
						errorHandler("Choose a custom link first");
						return;
					}
					else {
					}
				}
				else if ($("error").innerHTML.indexOf('Choose') === 0) {
					clearError();
				}

				$("action").innerHTML = imgLoading + "Uploading...<br>your link will be:";
				showUrl();
				aGET('api/v1/clear/' + secret, uploadFile);
			};

			$("expireAfterFirstDownload").onchange = function() {
				if (secret === false) {
					return;
				}

				if (!uploadedFile && $("toshorten").value.length > 0 && !$("expireAfterFirstDownload").checked) {
					// Contents are deleted after expiry, so for the case it already expired, we need to re-upload
					uploadText();
				}
				else {
					if ($("action").innerHTML.indexOf(imgLoading) == -1) {
						$("action").innerHTML = imgLoading + $("action").innerHTML;
					}
					aGET('/api/v1/setExpireAfterDownload/' + secret + '/' + shouldExpireAfterFirstDownload(), function() {
						$("action").innerHTML = $("action").innerHTML.substring(imgLoading.length - 1);
					});
				}
			}

			$("customLink").onkeyup =
			$("customLink").onmouseup =
			$("customLink").onchange = function() {
				var r = $("customLink").value;
				if (r == customUrl) {
					return; // Nothing changed.
				}

				var red = function(t) { return "<span style='color:#f00'>" + t + "</span>"; }
				var green = function(t) { return "<span style='color:#0f0'>" + t + "</span>"; }
				var judgement = "";
				if (secretsDB['customurls'][r] && !secretsDB['customurls'][r]['taken']) {
					customUrl = r;
					secret = secretsDB['customurls'][r]['secret'];
					setUrl(r);
					judgement = green("Looks good!");
				}
				else if (secretsDB['customurls'][r] && secretsDB['customurls'][r]['taken']) {
					judgement = red("Already taken.");
				}
				else {
					if (r.length === 0) {
						// intentionally skipped
					}
					else if (r.length < 4) {
						judgement = red("Too short");
					}
					else if (!/^[a-zA-Z0-9]*$/.test(r)) {
						judgement = red("Only a-z & 0-9, no spaces");
					}
					else {
						judgement = "Loading...";
						secret = false;
						aGET('api/v2/allocate/' + escape(r), function(data) {
							data = JSON.parse(data);
							var taken = data[0];
							if (!taken) {
								customUrl = data[2];
								secret = data[1];
								setUrl(data[2]);
								secretsDB['customurls'][data[2]] = {"taken": false, "secret": data[1]};
								if (customUrl == $("customLink").value) {
									$("customLinkValidation").innerHTML = green("Looks good!");
								}
							}
							else {
								if (secretsDB['customurls'][data[1]]) {
									// We already have it, we apparently sent a duplicate request
									return;
								}
								secretsDB['customurls'][data[1]] = {"taken": true};
								secret = false;
								$("customLinkValidation").innerHTML = red("Already taken.");
							}
						}, errorHandler);
					}
				}
				$("customLinkValidation").innerHTML = judgement;
			};

			window.addEventListener("paste", function(pasteEvent) {
				if (!pasteEvent.clipboardData) {
					return;
				}

				var items = pasteEvent.clipboardData.items;

				if (pasteEvent.clipboardData.items[0].kind == 'string') {
					if (document.activeElement != $("toshorten")) {
						toshortenprevval = $("toshorten").value;
						var fml = pasteEvent.clipboardData.getData("text");
						setTimeout(function() { // fix for MSIEdge, it pastes it twice behind each other otherwise
							$("toshorten").value = fml;
						}, 1);
						$("toshorten").focus(); // Such that ctrl+z works if they next press it
					}
					return;
				}

				if (pasteEvent.clipboardData.files.length === 0) {
					return errorHandler("No text or image detected on the clipboard. This appears to happen for large images. Try the file upload feature, that goes up to gigabytes!");
				}

				if (items.length > 1) {
					errorHandler("Only one clipboard item supported at the moment; using first one.");
				}

				if (pasteEvent.clipboardData.files[0].type.indexOf("image/") === 0) {
					showImage(items[0].getAsFile());
				}

				// credits to https://stackoverflow.com/a/47172409 for the method of converting the paste event to a <input type=file> using DataTransfer
				var dt = new DataTransfer();
				dt.items.add(items[0].getAsFile());
				$('f').files = dt.files;
				$('f').onchange(); // the onchange doesn't trigger on its own despite, y'know, it having changed
			}, false);

			$("toshorten").onkeydown = function(ev) {
				if (ev.key == 'z' && ev.ctrlKey && toshortenprevval) {
					$("toshorten").value = toshortenprevval;
					toshortenprevval = null;
				}
				else if (toshortenprevval && ev.key.length == 1) { // if it's a letter/digit/symbol we're typing, we don't want "undo" (ctrl+z) to trigger our custom undo thingy
					toshortenprevval = null;
				}
			};

			function showImage(imgfile) {
				var canvas = $("previewCanvas");
				var ctx = canvas.getContext('2d');

				var img = new Image();
				img.onload = function() {
					canvas.width = this.width * pasteimg_sizeratio;
					canvas.height = this.height * pasteimg_sizeratio;
					ctx.drawImage(img, 0, 0, img.width * pasteimg_sizeratio, img.height * pasteimg_sizeratio);
					ctx.scale(pasteimg_sizeratio, pasteimg_sizeratio);
				};

				img.src = (window.URL || window.webkitURL).createObjectURL(imgfile);
				$('previewCanvasWrapper').hidden = false;
			}

			function info() {
				$("info").innerHTML = '<div style="color: #FFB030; font-size: 2em;">Info</div>'
					+ 'Here you can make very short links that you can share over the phone, tell someone sitting next to you, write on a whiteboard, etc. '
					+ 'You can upload files, share some text, or share a link.<br>'
					+ '<br>'
					+ 'The links are case insensitive (<tt style="font-size: 12pt;">dro.pm/ab</tt> and <tt style="font-size: 12pt;">dro.pm/AB</tt> are the same) and do not include similar '
					+ 'characters like i and 1 or o and zero. They expire such that the convenient short links become available for the next person.<br>'
					+ '<br>'
					+ 'To report illegal stuff (e.g. phishing), a security issue, or tell me something else, use the contact info '
					+ '<a href="https://lucgommans.nl">on my personal website</a>. Note that links really do expire permanently after 18 hours, '
					+ 'so you should capture evidence of illegal content.<br>'
					+ '<br>'
					+ 'You can also upload files from the command line, as simply as:<br><tt>user@localhost:~$ dropm example.mp3</tt><br>'
					+ 'See <a href="http://pastebin.com/HUK0beKa">http://pastebin.com/HUK0beKa</a>';
			}

			function showUrl() {
				if (!secret) return;

				var html = '<span style="display:inline-block">' + url.replace('beta.','') + '</span> <img src="res/img/exturl.png" style="cursor:pointer" height="30" onclick="window.open(\'//' + url + '\');">'
					+ '<div class="urlSubtitle">(Works for 18 hours | <a href="javascript:clearCurrentData();" id=deletebtn>delete</a>)</div>';
				if (html != $("url").innerHTML) {
					$("url").innerHTML = html;
				}
				if ($("url").style.display != "block") {
					$("url").style.display = "block";
				}
				urlShown = true;
			}

			function setUrl(shortcode, dontClearOldUrls) {
				url = (location.hostname.indexOf('beta.') != -1 ? 'beta.' : '') + "dro.pm/" + shortcode;
				if (urlShown) {
					showUrl(url);
				}

				if (!dontClearOldUrls) {
					clearOldUrls();
				}

				if (!uploadedFile && customUrl && $("toshorten").value.length > 0) {
					uploadText();
				}
			}

			function aPOST(uri, data, callback, errorCallback) {
				var req = new XMLHttpRequest();
				req.open("POST", uri, true);
				req.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
				req.onreadystatechange = function() {
					if (req.readyState == 4) {
						if (req.status == 200) {
							callback(req.responseText);
						}
						else {
							errorCallback(req.responseText);
						}
					}
				};
				req.send('val=' + encodeURIComponent(data));
			}

			function aGET(uri, callback) {
				var req = new XMLHttpRequest();
				req.open("GET", uri, true);
				req.send(null);
				req.onreadystatechange = function() {
					if (req.readyState == 4 && callback)
						callback(req.responseText);
				}
			}

			function errorHandler(message) {
				$("error").style.display = "block";
				$("error").innerHTML = message;
			}

			function shouldExpireAfterFirstDownload(str) {
				if (currentTab != 2) {
					return (str ? "false" : false);
				}
				return $("expireAfterFirstDownload").checked ? "true" : "false";
			}

			function uploadFile() {
				if (secret === false) {
					errorHandler(msg_loadingLink);
					queuedUpload = uploadFile;
					return;
				}

				aGET('api/v1/extend/' + secret + '/900'); // Reserve the link for 15 minutes so it can upload

				// Check if the browser has filename support. If not, use the 1997 method of uploading files with a form and iframe... (hello Safari...)
				if (!$("f").name || $("f").name.length <= 0) {
					$("fileform").action = "fileman.php?secret=" + secret + "&expireAfterDownload=" + shouldExpireAfterFirstDownload();
					$("fileform").target = "fileframe";
					$("fileform").submit();
					uploadedFile = true;
					$("fileframe").onload = function() {
						// because clearing it before the upload completed would just be overwritten
						//   2020: wait, but we're not clearing the link that we just uploaded to, so I don't understand this code or comment (it seems to be a noop to me). TODO remove this and test
						uploadedToSecrets.push(secret);
						clearOldUrls();
						clearTimeout(noprogressmsgtimeout);
					}

					// Show this only if the upload takes >2 seconds
					noprogressmsgtimeout = setTimeout(function() {
						errorHandler('(your browser has limited JavaScript support; upload progress unavailable)');
					}, 3000);

					t = 400;
					function checkForUpdate() {
						aGET('api/v1/check/' + url.replace((location.hostname.indexOf('beta.') != -1 ? 'beta.' : '') + 'dro.pm/', ''), function(data) {
							if (data == '1') {
								var text = "";
								if (customUrl === false) {
									text = "Your short link:";
								}
								else {
									text = "Your custom link:";
								}
								$("action").innerHTML = "All done!<br>" + text;
							}
							else {
								t = Math.min(2750, t + 25);
								setTimeout(checkForUpdate, t);
							}
						});
					}

					setTimeout(function() {
						checkForUpdate();
					}, 750);
				}
				else {
					$("action").innerHTML = "<div id=progressbg><div id=progressfg><div id=progresstext>" + formatSize(0, $("f").files[0].size) + "</div></div></div><br>Your link will be:";

					var formData = new FormData();
					formData.append('f', $("f").files[0]);

					if ($("f").files[0].type.indexOf("image/") === 0) {
						showImage($("f").files[0]);
					}

					if (window.req) {
						window.req.abort();
						// this triggers readyState=4 which will not have the success response status from the server, so we need to clear the error...
						$("error").innerHTML = '';
					}
					window.req = new XMLHttpRequest();
					req.open("POST", "fileman.php?secret=" + secret + "&expireAfterDownload=" + shouldExpireAfterFirstDownload(), true);

					req.onreadystatechange = function(e) {
						if (req.readyState == 4) {
							if (req.responseText == '1') {
								var text = "Your custom link:";
								if (customUrl === false) {
									text = "Your short link:";
								}
								$("action").innerHTML = "All done!<br>" + text;
								uploadedToSecrets.push(secret);
								clearOldUrls();
							}
							else {
								errorHandler('Upload failed: ' + req.responseText);
							}
						}
					}

					req.upload.addEventListener("progress", function(e) {
						$("progresstext").innerHTML = formatSize(e.loaded, e.total);
						$("progressfg").style.width = Math.floor(e.loaded / e.total * 100) + "%";
					}, false);

					req.send(formData);
				}

				showUrl();
			}

			function uploadText() {
				if (secret === false) {
					if (currentTab == 1) {
						errorHandler(msg_loadingLink);
						queuedUpload = uploadText;
					}
					return;
				}
				uploadedFile = false;
				$("action").innerHTML = imgLoading + "Your link will be:";
				showUrl();
				aPOST('api/v2/set/' + secret + '/' + shouldExpireAfterFirstDownload(), $("toshorten").value, function(data) {
					uploadedToSecrets.push(secret);
					clearOldUrls();
					if (data == '1') {
						if (customUrl === false) {
							$("action").innerHTML = "Your short link:";
						}
						else {
							$("action").innerHTML = "Your custom link:";
						}
					}
					else if (data == 'secret not found') {
						errorHandler('This link seems to have expired. Please create a new one by <a href="javascript:location.reload()">reloading the page</a>.');
					}
					else {
						errorHandler(data);
					}
				}, errorHandler);
			}

			function clearOldUrls() {
				for (var s in uploadedToSecrets) {
					if (uploadedToSecrets[s] && uploadedToSecrets[s] != secret) {
						aGET('api/v1/clear/' + uploadedToSecrets[s]);
					}
				}
				uploadedToSecrets = [secret];
			}

			function tab(n) {
				if (n == currentTab) {
					return;
				}

				if (n == 1) {
					$("sendToDevice").style.display = "none";
					customUrl = false;
					var oldsecret = secret;
					secret = secretsDB['shorturl']['secret'];
					setUrl(secretsDB['shorturl']['url'], true);
					//$("url").innerHTML = '';
					//urlShown = false;
					$("action").innerHTML = "Share text, a link or a file<br>&nbsp;";

					if ((uploadedFile || $("toshorten").value.length > 0) && oldsecret !== false && secret !== false) {
						aGET('/api/v1/move/' + oldsecret + '/' + secret);
						uploadedToSecrets.push(secret);
					}
				}
				else {
					$("sendToDevice").style.display = "inline-block";
					$("action").innerHTML = "2. " + $("action").innerHTML;
					$("url").innerHTML = "";
					urlShown = false;
					secret = false;

					var clv = $("customLink").value;
					if (secretsDB['customurls'][clv] && !secretsDB['customurls'][clv]['taken']) {
						customUrl = clv;
						secret = secretsDB['customurls'][clv]['secret'];
						setUrl(clv);
					}

					clearOldUrls();
				}

				$("tabBtn" + currentTab).className = "tab unselected";
				$("tabBtn" + n).className = "tab";
				currentTab = n;
			}

			function allocateURI() {
				aPOST('api/v1/allocate', '', function(data) {
					try {
						data = JSON.parse(data);
						setUrl(data[1]);
						secret = data[0];
						secretsDB['shorturl'] = {'secret': secret, 'url': data[1]};
						if ($("error").innerHTML == msg_loadingLink) {
							clearError();
							queuedUpload();
							queuedUpload = function(){};
						}
					}
					catch (e) {
						errorHandler(data);
					}
				}, errorHandler);
			}

			function clearError() {
				$("error").innerHTML = '';
				$("error").style.display = 'none';
			}

			function formatSize(sofar, total) {
				var str;
				if (total < 1e4) {
					str = sofar + '/' + total + 'B';
				}
				else if (total < 1e7) {
					str = Math.round(sofar / 1024) + '/' + Math.round(total / 1024) + 'KiB';
				}
				else {
					str = Math.round(sofar / 1024 / 1024) + '/' + Math.round(total / 1024 / 1024) + 'MiB';
				}
				return str + '&nbsp;' + Math.floor(sofar / total * 100) + '%';
			}

			function clearCurrentData() {
				$("deletebtn").innerText = 'deleting...';
				aGET('api/v1/clear/' + secret, function(data) {
					if (data !== '1') {
						errorHandler('Failed to delete, please retry.');
						$("deletebtn").innerText = 'delete';
					}
					else {
						$("url").style.display = 'none';
						urlShown = false;
						$("action").innerHTML = defaultActionText[currentTab - 1];
						$("previewCanvasWrapper").hidden = true;
					}
				});
				if (window.req) {
					window.req.abort();
					// this triggers readyState=4 which will not have the success response status from the server, so we need to clear the error...
					$("error").innerHTML = '';
				}
			}

			setInterval($("toshorten").onchange, 250);
			allocateURI();
		</script>
		<style>
			#topbar {
				width: 100%;
				color: #FA0;
				text-align: center;
				background-color: #313137;
				font-size: 4em;
				font-weight: bold;
				margin: 0;
				padding: 20px 0 30px 0;
				border: 0;
				border-bottom: 2px solid #DDD;
			}
			#topbar .subtitle {
				font-size: 0.39em;
				color: #FFF;
			}
			body {
				font-family: Arial;
				margin: 0;
				background: url('res/img/bg.jpg');
				color: #FFB030;
			}
			#url {
				text-align: center;
				color: #FFF;
				font-size: 4em;
			}
			.urlSubtitle {
				text-align: center;
				font-size: 1rem;
				color: #FFF;
				margin-top: 10px;
				margin-bottom: 30px;
			}
			#error {
				color: #f00;
				font-weight: bold;
			}
			center {
				max-width: 610px;
				margin: 0 auto 0 auto;
			}
			#tabs {
				height: 80px;
				display: inline-block;
			}
			.tab {
				display: inline-block;
				padding-top: 8px;
				padding-left: 25px;
				padding-right: 25px;
				height: 36px;
				border: 1px solid #DDD;
				border-top: none;
				font-size: 14pt;
				font-weight: bold;
				background-color: #292932;
			}
			#tabs .unselected {
				background-color: transparent;
				cursor: pointer;
			}

			#progressbg {
				background-color: #292932;
				display: inline-block;
				height: 30px;
				width: 350px;
				text-align: right;
				vertical-align: center;
			}
			#progressfg {
				background-color: #FFB030;
				height: 100%;
				width: 0%;
				vertical-align: center;
			}
			#progresstext {
				color: #ffc040;
				font-size: 30px;
				mix-blend-mode: difference;
			}
			#previewCanvasWrapper {
				text-align: center;
			}
			a {
				color: rgb(0, 215, 251);
			}
		</style>
	</body>
</html>
